name: ECS Service Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  GITHUB_ROLE: ${{ secrets.PERSONAL_GITHUB_ROLE }}
  TERRAFORM_VERSION: 1.5.7
  GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
  GITHUB_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Generate GitHub App token
      - name: Generate GitHub App Token
        id: github-app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ env.GITHUB_APP_ID }}
          private_key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

      # Step 2: Checkout code using GitHub App token
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.github-app-token.outputs.token }}
          submodules: recursive

      # Step 3: Configure git for additional repo cloning
      - name: Configure Git with GitHub App token
        run: |
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "git@github.com:"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Set up Python virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -q checkov
    
      - name: Run Checkov
        run: |
          source venv/bin/activate
          checkov -f *.tf --quiet

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.GITHUB_ROLE }}
          role-session-name: GitHub_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      # Step 4: Terraform Init without SSH (GitHub App handles auth)
      - name: Terraform Init
        run: |
          TF_IN_AUTOMATION=true terraform init
        env:
          # Pass the token as environment variable for Terraform git operations
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}

      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}

      - name: "Upload Artifacts Plan files"
        uses: actions/upload-artifact@v4.4.0
        if: failure() || success()
        with:
          name: terraform-plan
          retention-days: 2
          overwrite: true
          path: |
            ${{ github.workspace }}/*.tfplan
            ${{ github.workspace }}/**/**/.terraform.lock.hcl
            ${{ github.workspace }}/**/.terraform.lock.hcl

  manual-approval:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Manual Approval
        id: manual-approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: KenkoGeek
          issue-title: Terraform plan approval for ${{ github.ref_name }}
          issue-body: ${{ github.event.head_commit.message }}
          minimum-approvals: 1
          timeout-minutes: 60

  terraform-apply:
    runs-on: ubuntu-latest
    needs: manual-approval

    steps:
      # Repeat GitHub App token generation for apply job
      - name: Generate GitHub App Token
        id: github-app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ env.GITHUB_APP_ID }}
          private_key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.github-app-token.outputs.token }}

      - name: Configure Git with GitHub App token
        run: |
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "git@github.com:"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.GITHUB_ROLE }}
          role-session-name: GitHub_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Init
        run: |
          TF_IN_AUTOMATION=true terraform init
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}

      - name: Terraform Apply
        run: terraform apply -auto-approve plan.tfplan
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}